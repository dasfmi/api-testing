// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"axiom-go/internal/utils"
	"time"
)

// Annotation - An annotation.
type Annotation struct {
	Title *string `json:"title,omitempty"`
	// The description of the annotation.
	Description *string `json:"description,omitempty"`
	// The time of the annotation.
	Time *time.Time `json:"time,omitempty"`
	// The end time, use for ranged annotations.
	EndTime *time.Time `json:"endTime,omitempty"`
	// The type of the annotation. Can be anything, used for filtering in the UI.
	Type string `json:"type"`
	// A URL attached to the annotation.
	URL *string `json:"url,omitempty"`
	// The datasets the annotation is attached to.
	Datasets []string `json:"datasets"`
	// The id of the annotation.
	ID string `json:"id"`
}

func (a Annotation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Annotation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Annotation) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *Annotation) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Annotation) GetTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.Time
}

func (o *Annotation) GetEndTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndTime
}

func (o *Annotation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *Annotation) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *Annotation) GetDatasets() []string {
	if o == nil {
		return []string{}
	}
	return o.Datasets
}

func (o *Annotation) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}
