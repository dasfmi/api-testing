// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"axiom/internal/utils"
	"time"
)

type IngestFailure struct {
	Error     string    `json:"error"`
	Timestamp time.Time `json:"timestamp"`
}

func (i IngestFailure) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IngestFailure) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *IngestFailure) GetError() string {
	if o == nil {
		return ""
	}
	return o.Error
}

func (o *IngestFailure) GetTimestamp() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Timestamp
}
