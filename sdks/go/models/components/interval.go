// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"axiom/internal/utils"
	"time"
)

type Interval struct {
	EndTime   time.Time    `json:"endTime"`
	Groups    []EntryGroup `json:"groups,omitempty"`
	StartTime time.Time    `json:"startTime"`
}

func (i Interval) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *Interval) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Interval) GetEndTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndTime
}

func (o *Interval) GetGroups() []EntryGroup {
	if o == nil {
		return nil
	}
	return o.Groups
}

func (o *Interval) GetStartTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartTime
}
