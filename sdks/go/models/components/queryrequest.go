// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type QueryRequest struct {
	Aggregations      []Aggregation `json:"aggregations,omitempty"`
	ContinuationToken *string       `json:"continuationToken,omitempty"`
	Cursor            *string       `json:"cursor,omitempty"`
	EndTime           string        `json:"endTime"`
	// FieldsMeta contains the unit information (if we have it) for each field
	FieldsMeta    []DatasetField `json:"fieldsMeta,omitempty"`
	Filter        *Filter        `json:"filter,omitempty"`
	GroupBy       []string       `json:"groupBy,omitempty"`
	IncludeCursor *bool          `json:"includeCursor,omitempty"`
	Limit         *int64         `json:"limit,omitempty"`
	Order         []Order        `json:"order,omitempty"`
	Project       []Projection   `json:"project,omitempty"`
	// The time resolution of the query’s graph, in seconds. Valid values are
	// the query’s time range /100 at maximum and /1000 at minimum or "auto".
	Resolution string `json:"resolution"`
	// start and end time for the query, these must be specified as RFC3339 strings
	// or using relative time expressions (e.g. now-1h, now-1d, now-1w, etc)
	StartTime     string          `json:"startTime"`
	VirtualFields []VirtualColumn `json:"virtualFields,omitempty"`
}

func (o *QueryRequest) GetAggregations() []Aggregation {
	if o == nil {
		return nil
	}
	return o.Aggregations
}

func (o *QueryRequest) GetContinuationToken() *string {
	if o == nil {
		return nil
	}
	return o.ContinuationToken
}

func (o *QueryRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *QueryRequest) GetEndTime() string {
	if o == nil {
		return ""
	}
	return o.EndTime
}

func (o *QueryRequest) GetFieldsMeta() []DatasetField {
	if o == nil {
		return nil
	}
	return o.FieldsMeta
}

func (o *QueryRequest) GetFilter() *Filter {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *QueryRequest) GetGroupBy() []string {
	if o == nil {
		return nil
	}
	return o.GroupBy
}

func (o *QueryRequest) GetIncludeCursor() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeCursor
}

func (o *QueryRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *QueryRequest) GetOrder() []Order {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *QueryRequest) GetProject() []Projection {
	if o == nil {
		return nil
	}
	return o.Project
}

func (o *QueryRequest) GetResolution() string {
	if o == nil {
		return ""
	}
	return o.Resolution
}

func (o *QueryRequest) GetStartTime() string {
	if o == nil {
		return ""
	}
	return o.StartTime
}

func (o *QueryRequest) GetVirtualFields() []VirtualColumn {
	if o == nil {
		return nil
	}
	return o.VirtualFields
}
