// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"axiom/internal/utils"
	"time"
)

type RangeInfo struct {
	// End is the ending time the query is limited by.
	// Queries are restricted to the interval [start,end).
	End *time.Time `json:"end,omitempty"`
	// Field specifies the field name on which the query range was restricted. Normally _time
	Field *string `json:"field,omitempty"`
	// Start is the starting time the query is limited by.
	// Queries are restricted to the interval [start,end).
	Start *time.Time `json:"start,omitempty"`
}

func (r RangeInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RangeInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RangeInfo) GetEnd() *time.Time {
	if o == nil {
		return nil
	}
	return o.End
}

func (o *RangeInfo) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

func (o *RangeInfo) GetStart() *time.Time {
	if o == nil {
		return nil
	}
	return o.Start
}
