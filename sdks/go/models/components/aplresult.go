// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type AplResult struct {
	Buckets      Timeseries `json:"buckets"`
	DatasetNames []string   `json:"datasetNames"`
	// FieldsMetaMap contains the unit information (if we have it) for each field in the given dataset entry
	FieldsMetaMap map[string][]DatasetField `json:"fieldsMetaMap,omitempty"`
	// Format specifies the result set format. Either "legacy" (default) or "tabular".
	Format string `json:"format"`
	// Matches hold the matching events of a filter query in the "legacy" result format
	Matches []Entry      `json:"matches,omitempty"`
	Request QueryRequest `json:"request"`
	Status  Status       `json:"status"`
	// Tables hold the result tables in the "tabular" result format
	Tables []Table `json:"tables,omitempty"`
}

func (o *AplResult) GetBuckets() Timeseries {
	if o == nil {
		return Timeseries{}
	}
	return o.Buckets
}

func (o *AplResult) GetDatasetNames() []string {
	if o == nil {
		return []string{}
	}
	return o.DatasetNames
}

func (o *AplResult) GetFieldsMetaMap() map[string][]DatasetField {
	if o == nil {
		return nil
	}
	return o.FieldsMetaMap
}

func (o *AplResult) GetFormat() string {
	if o == nil {
		return ""
	}
	return o.Format
}

func (o *AplResult) GetMatches() []Entry {
	if o == nil {
		return nil
	}
	return o.Matches
}

func (o *AplResult) GetRequest() QueryRequest {
	if o == nil {
		return QueryRequest{}
	}
	return o.Request
}

func (o *AplResult) GetStatus() Status {
	if o == nil {
		return Status{}
	}
	return o.Status
}

func (o *AplResult) GetTables() []Table {
	if o == nil {
		return nil
	}
	return o.Tables
}
