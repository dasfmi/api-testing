// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type Result struct {
	Buckets Timeseries `json:"buckets"`
	// FieldsMeta contains the unit information (if we have it) for each field
	FieldsMeta []DatasetField `json:"fieldsMeta,omitempty"`
	// Format specifies the result set format. Either "legacy" (default) or "tabular".
	Format string `json:"format"`
	// Matches hold the matching events of a filter query in the "legacy" result format
	Matches []Entry `json:"matches,omitempty"`
	Status  Status  `json:"status"`
	// Tables hold the result tables in the "tabular" result format
	Tables []Table `json:"tables,omitempty"`
}

func (o *Result) GetBuckets() Timeseries {
	if o == nil {
		return Timeseries{}
	}
	return o.Buckets
}

func (o *Result) GetFieldsMeta() []DatasetField {
	if o == nil {
		return nil
	}
	return o.FieldsMeta
}

func (o *Result) GetFormat() string {
	if o == nil {
		return ""
	}
	return o.Format
}

func (o *Result) GetMatches() []Entry {
	if o == nil {
		return nil
	}
	return o.Matches
}

func (o *Result) GetStatus() Status {
	if o == nil {
		return Status{}
	}
	return o.Status
}

func (o *Result) GetTables() []Table {
	if o == nil {
		return nil
	}
	return o.Tables
}
