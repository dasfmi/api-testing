// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"axiom/internal/utils"
	"time"
)

type EntryData struct {
}

type Entry struct {
	RowID   string               `json:"_rowId"`
	SysTime time.Time            `json:"_sysTime"`
	Time    time.Time            `json:"_time"`
	Data    map[string]EntryData `json:"data"`
}

func (e Entry) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Entry) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Entry) GetRowID() string {
	if o == nil {
		return ""
	}
	return o.RowID
}

func (o *Entry) GetSysTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.SysTime
}

func (o *Entry) GetTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Time
}

func (o *Entry) GetData() map[string]EntryData {
	if o == nil {
		return map[string]EntryData{}
	}
	return o.Data
}
